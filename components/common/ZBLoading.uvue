<template>
  <view class="loading-page flex">
    <image ref="refImg" class="img" src="@/static/images/logo.png" mode="">
    </image>
  </view>
</template>

<script>
  export default {
    props: {
      loading: {
        type: Boolean,
        default: false
      }
    },
    data() {
      return {
        element: null as UniElement | null,
        isSpin: false,
      }
    },
    created() {
      this.$nextTick(() => {
        setTimeout(() => {
          this.startSpin();
        }, 150)
      })
    },
    methods: {
      startSpin() {
        if (this.element == null) {
          this.element = this.$refs['refImg'] as UniElement;
        }
        setTimeout(() => { this.element!.style.setProperty('opacity', this.isSpin ? 1 : 0.01) }, 400)
        setInterval(() => {
          this.element!.style.setProperty('opacity', this.isSpin ? 1 : 0.01)
          this.isSpin = !this.isSpin
        }, 1000)
        this.element!.style.setProperty('transition', `all .5s ease-in-out`)
      },
    }
  }
</script>

<style lang="scss" scoped>
  .loading-page {
    width: 100vw;
    height: 100vh;
    background: #fff;
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: 9999;
  }

  .flex {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .img {
    width: 73px;
    height: 73px;
  }
</style>