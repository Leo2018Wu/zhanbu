<template>
  <view style="padding-bottom:20px;">
    <uni-navbar-lite title="匹配" :is-back="false" />
    <view class="fixed-btn" @click="toggle()">
      <text v-if="!isChoose" class="font-f-SanJi text-white u-font-32">合盘</text>
      <text v-else class="font-f-SanJi text-white u-font-20">取消合盘</text>
    </view>
    <view class="header">
      <fui-input v-model="name" :radius="6" padding="16rpx 32rpx"
        backgroundColor="#F6F6F6" placeholderStyle="color:#666" width="100%"
        :borderBottom="false" :size="28" :clearable="true" placeholder="请输入搜索内容"
        @confirm="getList()" @blur="getList()">
        <template #left>
          <fui-icon style="margin-right: 8px;" name="search"
            :size="32"></fui-icon>
        </template>
        <template #default>
          <text @click="getList()" class="font-f-SanJi u-pl-10">查询</text>
        </template>
      </fui-input>
      <view v-if="isChoose && selectedItems.length !== 0" class="selected-box">
        <text class="font-f-SanJi u-font-32 u-my-20">已选择档案</text>
        <view class="select-list">
          <view class="selected-item" v-for="(item, index) in selectedItems"
            :key="index">
            <text class="font-f-SanJi u-font-30" style="color: #000;">
              {{item['realname']}} <text class="font-f-SanJi u-font-24"
                style="color: #7e7e7e">{{item['gender'] == 0 ? '男' : item['gender'] == 1 ? '女' : '未知'}}</text>
            </text>
            <text class="font-f-SanJi u-font-24 u-mt-12"
              style="color: #7e7e7e;">阴历
              {{item.getString('detail.datetime.lunar') }}
            </text>
          </view>
        </view>
        <fui-button class="u-mt-30" :disabled="selectedItems.length !== 2"
          height="88rpx" :size="32" radius="7rpx" background="#020202"
          text="开始排盘" @click="startLucky()"></fui-button>
      </view>
    </view>
    <list-view id="list-view" class="match-page">
      <sticky-section v-for="(item,index) in dataList" :key="index"
        :push-pinned-header="true" :padding="[0,0,0,0]">
        <sticky-header :id="item['label']">
          <text
            class="sticky-header-text font-f-SanJi li-code">{{item['label']}}</text>
        </sticky-header>
        <list-item
          v-for="(subItem,subIndex) in item.getArray<UTSJSONObject>('data')"
          :key="subIndex" @click="onChange(subItem)">
          <view class="list-item">
            <view class="left">
              <image class="avatar" src="../../static/images/common/avatar1.png"
                mode="widthFix">
              </image>
              <view class="info">
                <text class="font-f-SanJi" style="color: #000;">
                  {{subItem['realname']}} <text class="font-f-SanJi u-font-24"
                    style="color: #7e7e7e">{{subItem['gender'] == 0 ? '男' : subItem['gender'] == 1 ? '女' : '未知'}}</text>
                </text>
                <text class="font-f-SanJi u-font-20 u-mt-12"
                  style="color: #7e7e7e;">阴历
                  {{subItem.getString('detail.datetime.lunar') }}
                </text>
              </view>
            </view>
            <view class="right-wrapper">
              <view class="right">
                <view class="right-top">
                  <view class="text-view__border text-view">
                    <text class="font-f-SanJi u-font-24"
                      style="color: #000;">{{subItem.getString('detail.top.year')}}</text>
                  </view>
                  <view class="text-view__border text-view">
                    <text class="font-f-SanJi u-font-24"
                      style="color: #000;">{{subItem.getString('detail.top.month')}}</text>
                  </view>
                  <view class="text-view__border text-view">
                    <text class="font-f-SanJi u-font-24"
                      style="color: #000;">{{subItem.getString('detail.top.day')}}</text>
                  </view>
                  <view class="text-view">
                    <text class="font-f-SanJi u-font-24"
                      style="color: #000;">{{subItem.getString('detail.top.time')}}</text>
                  </view>
                </view>
                <view class="right-bottom">
                  <text
                    class="font-f-SanJi u-font-20">综合评分{{(Math.random() * 100).toFixed(0)}}</text>
                </view>
              </view>
              <view class="u-ml-10" v-if="isChoose">
                <fui-icon v-if="selectedIds.includes(subItem['id'] as number)"
                  :size="42" name="checkbox-fill"></fui-icon>
                <fui-icon v-else name="checkround" :size="42"></fui-icon>
              </view>
            </view>
          </view>
        </list-item>
      </sticky-section>
    </list-view>

  </view>
</template>

<script>
  import { state } from '@/store/index.uts'
  import { getBaziList } from '@/utils/api';
  import { BASE_URL, API } from '@/env.uts'
  import uniNavbarLite from '@/components/uni-navbar-lite/uni-navbar-lite.uvue';

  export default {
    components: { uniNavbarLite },
    data() {
      return {
        name: '',
        isChoose: false,
        dataList: [] as UTSJSONObject[],
        selectedIds: [] as number[],
        selectedItems: [] as UTSJSONObject[]
      }
    },
    onLoad() {
      this.getList()
    },
    methods: {
      startLucky() {
        uni.navigateTo({
          url: `/pages/fortuneDetail/fortuneDetail?ids=${JSON.stringify(this.selectedIds)}`,
        });
      },
      onChange(row : UTSJSONObject) {
        if (!this.isChoose) return;
        const id = row['id'] as number;
        const index = this.selectedIds.findIndex(function (i : number) : boolean {
          return i === id
        })
        if (index > -1) {
          this.selectedIds.splice(index, 1)
          this.selectedItems.splice(index, 1)
        } else {
          if (this.selectedIds.length === 2) {
            uni.showToast({
              title: '最多选择两个项合盘',
              icon: 'none',
            });
            return;
          }
          this.selectedIds.push(id)
          this.selectedItems.push(row)
        }
        // console.log(123, row, this.selectedIds, this.selectedItems.length, this.selectedItems);
      },

      async getList() : Promise<any | null> {
        try {
          const response = await getBaziList({ page: 1, limit: 20, name: this.name });
          const res = response as UTSJSONObject
          if (res['code'] as number === 1) {
            const arr = res.getArray('data')
            this.dataList = arr as Array<UTSJSONObject>
          }
          return response;
        } catch (e) {
          return null
        }
      },
      toggle() {
        this.isChoose = true;
      }
    }
  }
</script>

<style lang="scss">
  @import "@/static/css/flex.scss";

  .header {
    width: 100%;
    padding: 10rpx 40rpx 0 40rpx;

    .selected-box {
      .select-list {
        @include flex(row, space-between, center);

        .selected-item {
          width: 300rpx;
          border: 1px solid #020202;
          border-radius: 4px;
          padding: 10px;
        }
      }
    }
  }

  .fixed-btn {
    width: 90rpx;
    height: 90rpx;
    border-radius: 90rpx;
    @include flex(row, center, center);
    position: absolute;
    bottom: 120px;
    right: 15px;
    z-index: 2;
    background-color: #000;
  }

  .match-page {
    flex: 1;
    align-items: center;
    padding: 0 40rpx;

    .sticky-header-text {
      background-color: #fff;
      padding-top: 10px;
    }

    .list-item {
      width: 670rpx;
      flex: 1;
      padding: 32rpx 0;
      border-bottom: 1rpx solid #E6E6E6;
      @include flex(row, space-between, center);

      .left {
        flex: 1;
        @include flex(row, flex-start, flex-start);

        .info {
          padding-top: 4px;
        }
      }

      .right-wrapper {
        @include flex(row, center);
      }

      .right {
        margin-left: auto;
        min-width: 210rpx;
        height: 80rpx;
        background-color: #f6f6f6;
        border-radius: 7rpx;

        &-top,
        &-bottom {
          flex: 1;
          @include flex(row, center, center)
        }

        &-top {
          padding: 0 6rpx;

          .text-view__border {
            border-right: 1rpx solid #4C4A4D;
          }

          .text-view {
            flex: 1;
            @include flex(row, center, center);
            position: relative;
            height: 22rpx;

          }
        }

        &-bottom {
          border-top: 1rpx solid rgba(76, 74, 77, 0.1);
        }
      }
    }

    .li-code {
      color: rgba(34, 34, 34, 0.6);
    }

    .avatar {
      width: 82rpx;
      height: 82rpx;
      border-radius: 82rpx;
      margin-right: 10px;
    }

  }
</style>