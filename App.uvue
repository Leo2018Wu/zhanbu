<script lang="uts">
  import { setGlobalUserInfo, setGlobalToken } from '@/store/index.uts'
  let firstBackTime = 0
  export default {
    onLaunch: function () {
      this.checkLoginStatus()
      uni.loadFontFace({
        global: true,
        family: 'SanJiHuaChaoTi',
        source: 'url(\'/static/fonts/SanJiHuaChaoTi-Cu-2.ttf\')',
      })
    },
    onShow: function () {
      // uni.clearStorage()

      console.log('App Show')
    },
    onHide: function () {
      console.log('App Hide')
    },
    methods: {
      checkLoginStatus() {
        const userInfo = uni.getStorageSync('USER_INFO') as string;
        const token = uni.getStorageSync('TOKEN') as string;
        if (token !== '') {
          setGlobalToken(token)
        }
        if (userInfo === '') {
          uni.redirectTo({
            url: '/commonPages/splash/splash',
            success: res => { },
            fail: () => { },
            complete: () => {
              uni.hideLoading()
            }
          });
        } else {
          setGlobalUserInfo(JSON.parse(userInfo) as UTSJSONObject)
        }
      }
    },
    // #ifdef APP-ANDROID
    onLastPageBackPress: function () {
      console.log('App LastPageBackPress')
      if (firstBackTime === 0) {
        uni.showToast({
          title: '再按一次退出应用',
          position: 'bottom',
        })
        firstBackTime = Date.now()
        setTimeout(() => {
          firstBackTime = 0
        }, 2000)
      } else if (Date.now() - firstBackTime < 2000) {
        firstBackTime = Date.now()
        uni.exit()
      }
    },
    // #endif
    onExit: function () {
      console.log('App Exit')
    },
  }
</script>

<style lang="scss">
  @import "@/static/css/global.scss";

  /* #ifdef WEB */
  body {
    font-family: 'SanJiHuaChaoTi';
  }

  /* #endif */
  .font-f-SanJi {
    font-family: SanJiHuaChaoTi;
  }

  .text-white {
    color: #ffffff;
  }

  .text-black {
    color: #000000;
  }

  .safe-bottom {
    padding-bottom: calc(constant(safe-area-inset-bottom) + 10px) !important;
    padding-bottom: calc(env(safe-area-inset-bottom) + 10px) !important;
  }

  .safe-top {
    padding-top: var(--status-bar-height);
  }
</style>